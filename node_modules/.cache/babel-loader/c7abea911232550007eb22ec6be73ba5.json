{"ast":null,"code":"var _jsxFileName = \"/Users/laurenbullen/Documents/GitHubRepos/react-quiz/src/components/Quiz.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Question from '../components/Question';\nimport QuestionCount from './QuestionCount';\nimport AnswerOption from './AnswerOption';\n\nconst Quiz = props => {\n  renderAnswerOptions = key => {\n    return React.createElement(AnswerOption, {\n      key: key.content,\n      answerContent: key.content,\n      answerType: key.type,\n      answer: props.answer,\n      questionId: props.questionId,\n      onAnswerSelected: props.onAnswerSelected,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    });\n  };\n\n  return React.createElement(\"div\", {\n    className: \"quiz\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(QuestionCount, {\n    counter: props.questionId,\n    total: props.questionTotal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }), React.createElement(Question, {\n    content: props.question,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }), React.createElement(\"ul\", {\n    className: \"answerOptions\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, props.answerOptions.map(renderAnswerOptions)));\n};\n\nQuiz.propTypes = {\n  answer: PropTypes.string.isRequired,\n  answerOptions: PropTypes.array.isRequired,\n  counter: PropTypes.number.isRequired,\n  question: PropTypes.string.isRequired,\n  questionId: PropTypes.number.isRequired,\n  questionTotal: PropTypes.number.isRequired,\n  onAnswerSelected: PropTypes.func.isRequired\n};\nexport default Quiz;","map":{"version":3,"sources":["/Users/laurenbullen/Documents/GitHubRepos/react-quiz/src/components/Quiz.js"],"names":["React","PropTypes","Question","QuestionCount","AnswerOption","Quiz","props","renderAnswerOptions","key","content","type","answer","questionId","onAnswerSelected","questionTotal","question","answerOptions","map","propTypes","string","isRequired","array","counter","number","func"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;AAEA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AACtBC,EAAAA,mBAAmB,GAAIC,GAAD,IAAS;AAC3B,WACI,oBAAC,YAAD;AACE,MAAA,GAAG,EAAEA,GAAG,CAACC,OADX;AAEE,MAAA,aAAa,EAAED,GAAG,CAACC,OAFrB;AAGE,MAAA,UAAU,EAAED,GAAG,CAACE,IAHlB;AAIE,MAAA,MAAM,EAAEJ,KAAK,CAACK,MAJhB;AAKE,MAAA,UAAU,EAAEL,KAAK,CAACM,UALpB;AAME,MAAA,gBAAgB,EAAEN,KAAK,CAACO,gBAN1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAUH,GAXD;;AAYE,SACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,aAAD;AACI,IAAA,OAAO,EAAEP,KAAK,CAACM,UADnB;AAEI,IAAA,KAAK,EAAEN,KAAK,CAACQ,aAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAKI,oBAAC,QAAD;AAAU,IAAA,OAAO,EAAER,KAAK,CAACS,QAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,EAMI;AAAI,IAAA,SAAS,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKT,KAAK,CAACU,aAAN,CAAoBC,GAApB,CAAwBV,mBAAxB,CADL,CANJ,CADJ;AAYH,CAzBD;;AA2BAF,IAAI,CAACa,SAAL,GAAiB;AACbP,EAAAA,MAAM,EAAEV,SAAS,CAACkB,MAAV,CAAiBC,UADZ;AAEbJ,EAAAA,aAAa,EAAEf,SAAS,CAACoB,KAAV,CAAgBD,UAFlB;AAGbE,EAAAA,OAAO,EAAErB,SAAS,CAACsB,MAAV,CAAiBH,UAHb;AAIbL,EAAAA,QAAQ,EAAEd,SAAS,CAACkB,MAAV,CAAiBC,UAJd;AAKbR,EAAAA,UAAU,EAAEX,SAAS,CAACsB,MAAV,CAAiBH,UALhB;AAMbN,EAAAA,aAAa,EAAEb,SAAS,CAACsB,MAAV,CAAiBH,UANnB;AAObP,EAAAA,gBAAgB,EAAEZ,SAAS,CAACuB,IAAV,CAAeJ;AAPpB,CAAjB;AAUA,eAAef,IAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Question from '../components/Question';\nimport QuestionCount from './QuestionCount';\nimport AnswerOption from './AnswerOption';\n\nconst Quiz = (props) => {\n  renderAnswerOptions = (key) => {\n      return (\n          <AnswerOption\n            key={key.content}\n            answerContent={key.content}\n            answerType={key.type}\n            answer={props.answer}\n            questionId={props.questionId}\n            onAnswerSelected={props.onAnswerSelected} \n          />\n      );\n  }  \n    return (\n        <div className='quiz'>\n            <QuestionCount\n                counter={props.questionId}\n                total={props.questionTotal}\n            />\n            <Question content={props.question} />\n            <ul className='answerOptions'>\n                {props.answerOptions.map(renderAnswerOptions)}\n            </ul>\n        </div>\n    );\n}\n\nQuiz.propTypes = {\n    answer: PropTypes.string.isRequired,\n    answerOptions: PropTypes.array.isRequired,\n    counter: PropTypes.number.isRequired,\n    question: PropTypes.string.isRequired,\n    questionId: PropTypes.number.isRequired,\n    questionTotal: PropTypes.number.isRequired,\n    onAnswerSelected: PropTypes.func.isRequired\n};\n\nexport default Quiz;"]},"metadata":{},"sourceType":"module"}