{"ast":null,"code":"var _jsxFileName = \"/Users/laurenbullen/Documents/GitHubRepos/react-quiz/src/App.js\";\nimport React from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport Question from './components/Question';\nimport QuestionCount from './components/QuestionCount';\nimport quizQuestions from './api/quizQuestions';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      counter: 0,\n      questionId: 1,\n      question: '',\n      answerOptions: [],\n      answer: '',\n      answersCount: {},\n      result: ''\n    };\n  }\n\n  componentDidMount() {\n    const shuffledAnswerOptions = quizQuestions.map(question => this.shuffleArray(question.answers));\n    this.setState({\n      question: quizQuestions[0].question,\n      answerOptions: shuffledAnswerOptions[0]\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      className: \"App-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: logo,\n      className: \"App-logo\",\n      alt: \"logo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \"React Quiz\")), React.createElement(Question, {\n      content: \"What is your favorite holiday?\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }));\n  }\n\n}\n\n;\nexport default App;","map":{"version":3,"sources":["/Users/laurenbullen/Documents/GitHubRepos/react-quiz/src/App.js"],"names":["React","Question","QuestionCount","quizQuestions","App","Component","constructor","props","state","counter","questionId","question","answerOptions","answer","answersCount","result","componentDidMount","shuffledAnswerOptions","map","shuffleArray","answers","setState","render","logo"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,OAAO,WAAP;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,aAAP,MAA0B,4BAA1B;AACA,OAAOC,aAAP,MAA0B,qBAA1B;;AAEA,MAAMC,GAAN,SAAkBJ,KAAK,CAACK,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAY;AACVC,MAAAA,OAAO,EAAE,CADC;AAEVC,MAAAA,UAAU,EAAE,CAFF;AAGVC,MAAAA,QAAQ,EAAE,EAHA;AAIVC,MAAAA,aAAa,EAAE,EAJL;AAKVC,MAAAA,MAAM,EAAE,EALE;AAMVC,MAAAA,YAAY,EAAE,EANJ;AAOVC,MAAAA,MAAM,EAAE;AAPE,KAAZ;AASD;;AAEDC,EAAAA,iBAAiB,GAAE;AACjB,UAAMC,qBAAqB,GAAGd,aAAa,CAACe,GAAd,CAAkBP,QAAQ,IAAI,KAAKQ,YAAL,CAAkBR,QAAQ,CAACS,OAA3B,CAA9B,CAA9B;AAEA,SAAKC,QAAL,CAAc;AACZV,MAAAA,QAAQ,EAAER,aAAa,CAAC,CAAD,CAAb,CAAiBQ,QADf;AAEZC,MAAAA,aAAa,EAAEK,qBAAqB,CAAC,CAAD;AAFxB,KAAd;AAID;;AAEDK,EAAAA,MAAM,GAAG;AACP,WACA;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,GAAG,EAAEC,IAAV;AAAgB,MAAA,SAAS,EAAC,UAA1B;AAAqC,MAAA,GAAG,EAAC,MAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,CADF,EAKE,oBAAC,QAAD;AAAU,MAAA,OAAO,EAAC,gCAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,CADA;AAUH;;AAnCiC;;AAoCjC;AAED,eAAenB,GAAf","sourcesContent":["import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Question from './components/Question';\nimport QuestionCount from './components/QuestionCount'\nimport quizQuestions from './api/quizQuestions'\n\nclass App extends React.Component {\n  constructor(props){\n    super(props);\n\n    this.state ={\n      counter: 0,\n      questionId: 1,\n      question: '',\n      answerOptions: [],\n      answer: '',\n      answersCount: {},\n      result: ''\n    }\n  }\n  \n  componentDidMount(){\n    const shuffledAnswerOptions = quizQuestions.map(question => this.shuffleArray(question.answers));\n\n    this.setState({\n      question: quizQuestions[0].question,\n      answerOptions: shuffledAnswerOptions[0]\n    })\n  }\n\n  render (){\n    return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <h2>React Quiz</h2>\n      </header>\n      <Question content='What is your favorite holiday?' />\n      {/* <QuestionCount /> */}\n    </div>\n  );\n}\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}